(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))u(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&u(n)}).observe(document,{childList:!0,subtree:!0});function o(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function u(e){if(e.ep)return;e.ep=!0;const r=o(e);fetch(e.href,r)}})();const g="modulepreload",E=function(c){return"/BattleshipJs/"+c},m={},f=function(t,o,u){let e=Promise.resolve();if(o&&o.length>0){document.getElementsByTagName("link");const n=document.querySelector("meta[property=csp-nonce]"),i=n?.nonce||n?.getAttribute("nonce");e=Promise.allSettled(o.map(a=>{if(a=E(a),a in m)return;m[a]=!0;const d=a.endsWith(".css"),y=d?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${a}"]${y}`))return;const l=document.createElement("link");if(l.rel=d?"stylesheet":g,d||(l.as="script"),l.crossOrigin="",l.href=a,i&&l.setAttribute("nonce",i),document.head.appendChild(l),d)return new Promise((p,h)=>{l.addEventListener("load",p),l.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${a}`)))})}))}function r(n){const i=new Event("vite:preloadError",{cancelable:!0});if(i.payload=n,window.dispatchEvent(i),!i.defaultPrevented)throw n}return e.then(n=>{for(const i of n||[])i.status==="rejected"&&r(i.reason);return t().catch(r)})},{gameState:s}=await f(async()=>{const{gameState:c}=await import("./GameState-COIyZKUR.js");return{gameState:c}},[]);class b{static toggleClassWithTimeout(t,o,u){t.classList.add(o),setTimeout(()=>{t.classList.remove(o)},u)}static clearBoard(t){t.innerHTML=""}static removeElements(t){document.querySelectorAll(t).forEach(o=>{o.remove()})}static selectBoardSelector(t){s.boards[`${t}Board`]=document.getElementById(`${t}-board`)}static initializeHtmlElements(){return{body:document.querySelector("body"),buttonsContainer:document.getElementById("buttons-container"),startButton:document.getElementById("start-button"),restartButton:document.getElementById("restart-button"),rotateButton:document.getElementById("rotate-button"),interfaceContainer:document.getElementById("interface-container"),message:document.getElementById("message"),turnIndicator:document.getElementById("turn-indicator")}}static async resetVariables(){s.humanShips=[],s.enemyShips=[],s.enemyMoves=[],s.gameStarted=!1,s.currentShipIndex=0,s.playerTurn=!0,s.isHorizontal=!0,s.enemyGuesses=[],s.humanGuesses=[]}}const{init:v}=await f(async()=>{const{init:c}=await import("./init-BFWMImu3.js");return{init:c}},[]);document.addEventListener("DOMContentLoaded",async()=>{await b.initializeHtmlElements()});v();export{f as _,b as h};
